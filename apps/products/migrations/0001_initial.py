# Generated by Django 5.2.4 on 2025-09-26 21:54

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'Entrada'), ('out', 'Salida'), ('adjust', 'Ajuste'), ('reserve', 'Reserva')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('notes', models.TextField(blank=True)),
                ('reservation_id', models.IntegerField(blank=True, db_index=True, help_text='ID de Reservation si proviene de una reserva', null=True)),
                ('adjust_reason', models.TextField(blank=True, help_text='Obligatorio solo para ajustes.', verbose_name='Motivo del ajuste')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Precio unitario')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% Descuento')),
                ('consumed', models.BooleanField(default=False, help_text='Marca si un movimiento de reserva ya fue consumido en una venta')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=50, unique=True, verbose_name='SKU')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Costo base del producto sin impuestos', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo neto')),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=19.0, help_text='Porcentaje de impuesto aplicable', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% de IVA')),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=30.0, help_text='Porcentaje de ganancia sobre el costo con IVA', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='% de Ganancia')),
                ('_stock', models.IntegerField(db_column='stock', default=0, help_text='Solo se usa si el producto no tiene variantes', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock manual')),
                ('min_stock', models.IntegerField(default=5, verbose_name='Stock mínimo')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('inactive', 'Inactivo'), ('draft', 'Borrador')], default='active', max_length=10)),
                ('has_variants', models.BooleanField(default=True, help_text='Marcar si este producto se venderá con variantes (tallas, colores, etc).', verbose_name='¿Tiene Variantes?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('is_main', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Imagen de Producto',
                'verbose_name_plural': 'Imágenes de Producto',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('size', models.CharField(blank=True, max_length=50, verbose_name='Talla')),
                ('color', models.CharField(blank=True, max_length=50, verbose_name='Color')),
                ('stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Inventario')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ajuste de precio')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Variante de Producto',
                'verbose_name_plural': 'Variantes de Producto',
                'ordering': ['sku'],
            },
        ),
    ]
